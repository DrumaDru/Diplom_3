import pytest
import allure
from Diplom_3.pages.order_list_page import OrderListPage
class TestOrderListPage:
    @allure.title('Проверка открытия модального окна по клику на заказ, на странице "Лента заказов"')
    @allure.description(
        'На главной странице, находим элемент вкладки "Лента заказов" и по клику переходим на страницу "Лента заказаов".'
        'На странице лента заказов, находим элемента заказа и по клику на него открываем модальное окно с информацией о заказе.'
        'В окрывшемся модальом окне, находим заголовок "Состав" и проверяем, что метод возвращает текст заголовка.')
    def test_get_order_modal(self, driver, log_in):
         order_list_page = OrderListPage(driver)
         result = order_list_page.get_order_modal()

         assert result == "Cостав"
    @allure.title('Проверка, что заказ во вкладке "История заказов", отображается в списке заказов на странице "Лента заказов')
    @allure.description(
        'На главной странице, находим элемент вкладки "Личный кабинет" и по клику переходим на страницу "Личный кабинет.'
        'На странице "Личный кабинет, находим элемент вкладки "История заказов" и переходим на нее по клику.'
        'Получам текст элемента заказа, находим элемент вкладки "Лента заказов" и по клику переходим на страницу "Лента заказов".'
        'На странице "Лента заказов", находим элемент заказа в списке заказов и проверяем, что метод возвращает равенство '
        'текстов заказа из вкладки "История заказов" и заказа из списка заказов')
    def test_history_order_in_order_list(self, driver, log_in, create_order):
         order_list_page = OrderListPage(driver)
         result = order_list_page.get_history_order_in_order_list()

         assert result is True
    @allure.title('Проверка, что кол-во заказов за все время увеличивается после создания нового заказа.')
    @allure.description(
        'На главной странице, находим элемент вкладки "Лента заказов" и переходм на нее по клику.'
        'На странице "Лента заказов", находим элемент кол-ва заказов за все время и сохраняем его в переменную.'
        'С помощью вспомогательного метода, выполняем заказ, переходим на вкладку "Лента заказов" и находим'
        'элемент кол-ва заказов за все время, значение которого увеличилось, после нового заказка. Проверяем,'
        'что метод возвращает сравнение кол-ва заказов за все время до нового заказа и после.')
    def test_get_all_time_orders(self, driver, log_in):
         order_list_page = OrderListPage(driver)

         result = order_list_page.get_all_time_orders()

         assert result is True

    @allure.title('Проверка, что кол-во заказов на сегодня, увеличивается после создания нового заказа')
    @allure.description(
        'На главной странице, находим элемент вкладки "Лента заказов" и переходм на нее по клику.'
        'На странице "Лента заказов", находим элемент кол-ва заказов за сегодня и сохраняем его в переменную.'
        'С помощью вспомогательного метода, выполняем заказ, переходим на вкладку "Лента заказов" и находим'
        'элемент кол-ва заказов за сегодня, значение которого увеличилось, после нового заказка. Проверяем,'
        'что метод возвращает сравнение кол-ва заказов за сегодня до нового заказа и после.')
    def test_get_today_orders(self, driver, log_in):
         order_list_page = OrderListPage(driver)
         result = order_list_page.get_today_orders()

         assert result is True

    @allure.title('Проверка, что созданный новый заказ, отображается в разделе "В работе" на странице "Лента заказов"')
    @allure.description(
        'С помощью вспомогательного метода, создаем новый заказ, затем на главной странице, находим элемент вкладки '
        '"Лента заказов" и переходм на нее по клику.'
        'На странице "Лента заказов", находим элемент заказа, получаем его текст и сохраняем в переменную, затем'
        'находим элемент значения вкладки "В работе" и ожидаем, когда текст элемента заказа, отобразится в значении'
        'элемента раздела в "Работе" и сохраняем текст элемента в переменную.'
        'Проверяем, что метод возвращает равеноство текста заказа в ленте заказов и в разделе "В работе".')
    def test_get_order_in_work(self, driver, log_in):
        order_list_page = OrderListPage(driver)
        result = order_list_page.get_order_in_work()

        assert result is True

